/*
I pledge my honor that all parts of this project were done by me individually
and without collaboration with others.
 Name: Shachee Mishra
 SBU ID: 109915951
 email: shachee.mishra@stonybrook.edu


*/






/*
The schema contains 4 relations:

1. show (showID, date_of_show)
	pric2 key: showID
2. judge (judgeID,showID, judgeName)
	pric2 key: judgeID
3. contestant(contestantName)
	pric2 key: contestantName
4. scores (contestantName,ArtPieceName,ShowName,Judge,score)
	pric2 key: contestantName,ArtPieceName,ShowName,Judge
*/


show(Show1,20140202).
show(Show1,20140202).
show(Show2,20140402).
show(Show3,20140602).
show(Show4,20140802).
show(Show5,20141005).

judge(s11,Show1,Judy).
judge(s12,Show1,Lucy).
judge(s13,Show1,Irving).
judge(s21,Show2,Judy).
judge(s22,Show2,Phil).
judge(s31,Show3,Irving).
judge(s32,Show3,Phil).
judge(s33,Show3,Oscar).
judge(s41,Show4,Lucy).
judge(s42,Show4,Oscar).
judge(s51,Show5,Lucy).
judge(s52,Show5,Irving).
judge(s53,Show5,Phil).

contestant(Joe).
contestant(Mary).
contestant(Bess).
contestant(Don).
contestant(Bob).
contestant(Tom).
contestant(Ann).
	
scores(Joe,Barcarolle,Show1,Judy,7).
scores(Joe,Barcarolle,Show1,Lucy,8).
scores(Joe,Barcarolle,Show1,Irving,6).
scores(Mary,Barcarolle,Show1,Judy,5).
scores(Mary,Barcarolle,Show1,Lucy,6).
scores(Mary,Barcarolle,Show1,Irving,6).
scores(Mary,Giselle,Show1,Judy,9).
scores(Mary,Giselle,Show1,Lucy,6).
scores(Mary,Giselle,Show1,Irving,8).
scores(Bess,'Besame Mucho',Show1,Judy,4).
scores(Bess,'Besame Mucho',Show1,Lucy,5).
scores(Bess,'Besame Mucho',Show1,Irving,6).
scores(Don,'Besame Mucho',Show1,Judy,9).
scores(Don,'Besame Mucho',Show1,Lucy,9).
scores(Don,'Besame Mucho',Show1,Irving,7).

scores(Bob,'Swan Lake',Show2,Judy,8).
scores(Bob,'Swan Lake',Show2,Phil,6).
scores(Mary,Habanera,Show2,Judy,3).
scores(Mary,Habanera,Show2,Phil,5).
scores(Mary,'Besame Mucho',Show2,Judy,9).
scores(Mary,'Besame Mucho',Show2,Phil,10).
scores(Ann,Habanera,Show2,Judy,7).
scores(Ann,Habanera,Show2,Phil,6).
scores(Bess,Giselle,Show2,Judy,8).
scores(Bess,Giselle,Show2,Phil,7).
scores(Tom,'Besame Mucho',Show2,Judy,5).
scores(Tom,'Besame Mucho',Show2,Phil,5).
scores(Tom,'The Tramp',Show2,Judy,7).
scores(Tom,'The Tramp',Show2,Phil,6).

scores(Bob,'The Tramp',Show3,Irving,8).
scores(Bob,'The Tramp',Show3,Phil,7).
scores(Bob,'The Tramp',Show3,Oscar,9).
scores(Ann,'Besame Mucho',Show3,Irving,7).
scores(Ann,'Besame Mucho',Show3,Phil,6).
scores(Ann,'Besame Mucho',Show3,Oscar,4).
scores(Bess,'Swan Lake',Show3,Irving,6).
scores(Bess,'Swan Lake',Show3,Phil,8).
scores(Bess,'Swan Lake',Show3,Oscar,7).
scores(Tom,Barcarolle,Show3,Irving,9).
scores(Tom,Barcarolle,Show3,Phil,7).
scores(Tom,Barcarolle,Show3,Oscar,6).
scores(Don,Giselle,Show3,Irving,8).
scores(Don,Giselle,Show3,Phil,6).
scores(Don,Giselle,Show3,Oscar,9).

scores(Joe,'The Tramp',Show4,Lucy,7).
scores(Joe,'The Tramp',Show4,Oscar,6).
scores(Bob,Barcarolle,Show4,Lucy,6).
scores(Bob,Barcarolle,Show4,Oscar,8).
scores(Ann,'Besame Mucho',Show4,Oscar,9).
scores(Ann,'Besame Mucho',Show4,Oscar,8).
scores(Tom,'The Tramp',Show4,Lucy,8).
scores(Tom,'The Tramp',Show4,Oscar,10).
scores(Tom,Barcarolle,Show4,Lucy,5).
scores(Tom,Barcarolle,Show4,Oscar,5).

scores(Bob,'Swan Lake',Show5,Lucy,3).
scores(Bob,'Swan Lake',Show5,Irving,5).
scores(Bob,'Swan Lake',Show5,Phil,6).
scores(Bob,Giselle,Show5,Lucy,4).
scores(Bob,Giselle,Show5,Irving,6).
scores(Bob,Giselle,Show5,Phil,8).
scores(Mary,Barcarolle,Show5,Lucy,5).
scores(Mary,Barcarolle,Show5,Irving,7).
scores(Mary,Barcarolle,Show5,Phil,10).
scores(Mary,'Besame Mucho',Show5,Lucy,6).
scores(Mary,'Besame Mucho',Show5,Irving,8).
scores(Mary,'Besame Mucho',Show5,Phil,7).
scores(Ann,'Besame Mucho',Show5,Lucy,7).
scores(Ann,'Besame Mucho',Show5,Irving,9).
scores(Ann,'Besame Mucho',Show5,Phil,6).
scores(Bess,'Besame Mucho',Show5,Lucy,9).
scores(Bess,'Besame Mucho',Show5,Irving,8).
scores(Bess,'Besame Mucho',Show5,Phil,8).
scores(Bess,Habanera,Show5,Lucy,8).
scores(Bess,Habanera,Show5,Irving,7).
scores(Bess,Habanera,Show5,Phil,10).
scores(Tom,'The Tramp',Show5,Lucy,6).
scores(Tom,'The Tramp',Show5,Irving,6).
scores(Tom,'The Tramp',Show5,Phil,8).
scores(Don,'The Tramp',Show5,Lucy,5).
scores(Don,'The Tramp',Show5,Irving,8).
scores(Don,'The Tramp',Show5,Phil,7).

// This is query for returning pair of contestants who happened to audition the same piece during the same show
//	and got the same score from at least one judge

Query1(?U1,?U2) :-
	scores(?U1,?A,?Show,?J,?Score), scores(?U2,?A,?Show,?J,?Score),
	?U1 @< ?U2.
	
// This is the query for all pairs of contestants who happened to audition the same piece (in possibly different
//	shows) and got the same average score for that piece.



	//Function to get Average score of a contestant. 
	
	getAvgScore(?U1,?A,?S1,?Score1,?L) :-
		contestant(?U1),
		?L=avg{?Score1[?U1,?A,?S1]|scores(?U1,?A,?S1,?_J,?Score1)}.

Query2(?U1,?U2) :-
	contestant(?U1),
	contestant(?U2),
	getAvgScore(?U1,?Avg,?,?,?L1),getAvgScore(?U2,?Avg,?,?,?L2),
	?L1=?L2,
	?U1 @< ?U2.
	
// This is the query for all pairs of contestants who auditioned the same piece in (possibly different) shows that
// had at least 3 judges and the two contestants got the same highest score.
	

	//Function to get highest score of contestant
	getHighestScore(?U1,?A,?S1,?Score1,?L,?C) :-
		contestant(?U1),
		?L=max{?Score1[?U1,?A,?S1]|scores(?U1,?A,?S1,?_J,?Score1)},
		?C=count{?Score1[?U1,?A,?S1]|scores(?U1,?A,?S1,?_J,?Score1)}.
	
Query3(?U1,?U2) :-
	contestant(?U1),
	contestant(?U2),
	getHighestScore(?U1,?_A,?,?,?L1,?C1),getHighestScore(?U2,?_A,?,?,?L2,?C2),
	?L1=?L2,
	?C1>2,
	?C2>2,
	?U1 @< ?U2.


// This is the query for all pairs of contestants such that the first contestants has performed all the pieces of the
// second contestant (possibly in different shows)


// PART A: without the use of quantifiers.
	
	getArtContestantPair(?N,?C):-
			scores(?N,?C,?,?,?).

	getOverLappingPairs(?U1,?U2) :-
		contestant(?U1),
		contestant(?U2),
		\naf getArtContestantPair(?U1,?P),getArtContestantPair(?U2,?P),
		?U1 != ?U2.

	getAllPairs(?U1,?U2) :-
		contestant(?U1),
		contestant(?U2),	
		?U1 != ?U2.
	
Query4a(?U1,?U2 ) :- getAllPairs(?U1,?U2) , \naf getOverLappingPairs(?U1,?U2) .


// PART B: using explicit quantifiers
	
Query4b(?U1,?U2) :-
	forall(?P)^(getArtContestantPair(?U1,?P)~~>getArtContestantPair(?U2,?P) ),
	contestant(?U1),
	contestant(?U2),
	?U1 != ?U2. 

	
// Find all chained co-auditions. A chained co-auditions is the transitive closure of the following
// binary relation: X and Y (directly) co-auditioned iff they both performed the same piece in the
// same show and got the same score from at least one (same) judge. Thus, a chained co-audition
// can be either a direct or an indirect co-audition.
	
	checkSameScores(?U1,?U2) :-
	scores(?U1,?A,?Show,?J,?Score), scores(?U2,?A,?Show,?J,?Score),
	?U1 != ?U2.

	chained(?U1,?U2) :- checkSameScores(?U1,?U2).
	chained(?U1,?U3) :-  chained(?U1,?U2) , checkSameScores(?U2,?U3), ?U2 != ?U3, ?U1 != ?U2 , ?U1 != ?U3  .

	Query5(?U1,?U2) :- chained(?U1 ,?U2), ?U1 @< ?U2.
	
	
	
	

	
	
	
	
	
	

	
	
	





